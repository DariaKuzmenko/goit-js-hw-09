{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAKtC,SAASI,EAASC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAC5BZ,EAAAa,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,CAG/D,SAASI,EAAQN,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAC3BZ,EAAAa,OAAOI,QAAQ,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,CAiB5D,SAASM,EAAcP,EAAUC,GAC/B,OAAO,IAAIO,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAET,WAAUC,UAEpBS,EAAO,CAAEV,WAAUC,S,GAEpBA,E,IAlCPV,EAAKC,KAAKuB,iBAAiB,UAU3B,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAASC,OAAO5B,EAAKM,YAAYuB,OACnCnB,EAAQkB,OAAO5B,EAAKI,WAAWyB,OAC7BC,EAAOF,OAAO5B,EAAKK,UAAUwB,OAEnCN,YAAW,WACT,IAAK,IAAIQ,EAAQ,EAAGA,GAASJ,EAAQI,GAAS,EAC5Cf,EAAce,EAAOrB,GAAOsB,KAAKzB,GAAU0B,MAAMnB,GACjDJ,GAASoB,C,GAEVpB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction onSucces({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const amount = Number(refs.amountInput.value);\n  let delay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n\n  setTimeout(() => {\n    for (let index = 1; index <= amount; index += 1) {\n      createPromise(index, delay).then(onSucces).catch(onError);\n      delay += step;\n    }\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","$ce04d3a99e08e73b$var$onSucces","param","position","delay","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","$ce04d3a99e08e73b$var$createPromise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","amount","Number","value","step","index","then","catch"],"version":3,"file":"03-promises.b5e59730.js.map"}